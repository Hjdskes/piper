#!/usr/bin/env python3

import sys
import signal
import os
#import locale
#import gettext

import argparse
import logging
import piper

import gi
gi.require_version('Gio', '2.0')
gi.require_version('Gtk', '3.0')
from gi.repository import Gio, Gtk

#srcdir = os.path.abspath(os.path.join(os.path.dirname(piper.__file__), '..'))
#if os.path.exists(os.path.join(srcdir, 'meson.build')):
#    print('Running from source tree, using local files')
#    pkgdatadir = os.path.join(srcdir, 'data')
#    if not os.environ.get('GSETTINGS_SCHEMA_DIR'):
#        os.environ['GSETTINGS_SCHEMA_DIR'] = pkgdatadir
#else:
pkgdatadir = '@pkgdatadir@'
#localedir = '@localedir@'

def install_excepthook():
    """ Make sure we exit when an unhandled exception occurs. """
    old_hook = sys.excepthook

    def new_hook(etype, evalue, etb):
        old_hook(etype, evalue, etb)
        while Gtk.main_level():
            Gtk.main_quit()
        sys.exit()
    sys.excepthook = new_hook

if __name__ == "__main__":
    install_excepthook()

    parser = argparse.ArgumentParser()
    parser.add_argument('-d', "--debug", action="store_true", default=False, dest="debug")
    args = parser.parse_args()
    if args.debug:
        logging.basicConfig(level=logging.DEBUG,
                            format='%(asctime)s %(levelname)s\t%(message)s',
                            datefmt='%H:%M:%S')
        # Gtk hates "-d" switch, so lets drop it
        if '-d' in sys.argv:
            sys.argv.remove("-d")
        if '--debug' in sys.argv:
            sys.argv.remove("--debug")
    else:
        logging.basicConfig(level=logging.WARN,
                            format='%(asctime)s %(levelname)s\t%(message)s',
                            datefmt='%H:%M:%S')

    #locale.bindtextdomain('piper', localedir)
    #locale.textdomain('piper')
    #gettext.bindtextdomain('piper', localedir)
    #gettext.textdomain('piper')

    resource = Gio.resource_load(os.path.join(pkgdatadir, 'piper.gresource'))
    Gio.Resource._register(resource)

    signal.signal(signal.SIGINT, signal.SIG_DFL)
    win = piper.Piper()
    Gtk.main()
